(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["d99106a2"],{2514:function(e,n,o){"use strict";var r=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",[o("section",{staticClass:"page-header"},[o("h1",{staticClass:"project-name"},[e._v("Colorize & Theme")]),o("h2",{staticClass:"project-tagline"}),o("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://github.com/hawkeye64/quasar-mixin-colorize",target:"_blank",label:"View on GitHub","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{to:"/docs",label:"Docs","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{to:"/examples",label:"Examples","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://donate.quasar.dev",target:"_blank",label:"Donate","no-caps":"",flat:""}})],1),o("main",{staticClass:"flex flex-start justify-center inset-shadow"},[o("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg inset-shadow",staticStyle:{width:"100%",height:"3px"}}),o("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg bg-white shadow-1",staticStyle:{"max-width":"800px",width:"100%"}},[e._t("default")],2)])])},a=[],l={name:"Hero"},t=l,d=o("2877"),u=Object(d["a"])(t,r,a,!1,null,null,null);n["a"]=u.exports},"8b24":function(e,n,o){"use strict";o.r(n);var r=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("hero",[o("q-markdown",{attrs:{src:e.markdown,toc:""},on:{data:e.onToc}})],1)},a=[],l=o("2514"),t="Colorize & Theme\n===\n\nColorize and Theme are Vue Mix-ins for components created for Quasar Framework. They are only for components that use a `render` function. They do not work with template formats.\n\n# Features\n\nAllows you to \"skin\" your component with customized text, background and border colors. You can use:\n1. any color from the [Quasar Color Palette](https://quasar.dev/style/color-palette#Color-List),\n2. any # color (ex: `#c0c0c0`),\n3. rgb/rgba/hsl/hsla color (ex: `rgb(255,0,0)`),\n4. any css named colors (ex: `ghostwhite`) or\n5. any Quasar colors from css var (ex: `--q-color-red-10`)\n6. any Quasar colors as `border-` (ex: `border-blue-grey-10`)\n\nThis is a lot of choices!\n\n# Install\nTo add this mix-in to your Quasar application, run the following (in your Quasar app folder):\n\n```bash\nyarn add quasar-mixin-colorize\n\n# or\n\nnpm install -S quasar-mixin-colorize\n```\n\n# Uninstall\nTo remove this mix-in from your Quasar application, run the following (in your Quasar app folder):\n\n```bash\nyarn remove quasar-mixin-colorize\n\n# or\n\nnpm remove -S quasar-mixin-colorize\n```\n\n# Examples\nExamples with code can be found [here](https://hawkeye64.github.io/quasar-mixin-colorize/examples).\n\n# Demo Project (source)\nSource for this application can be found [here](https://github.com/hawkeye64/quasar-mixin-colorize/tree/master/demo).\n\n# Simple Examples\n\n## Colorize\n\n### Use Text and Background Color Definition\n\n```js\nimport Vue from 'vue'\nimport { Colorize } from 'quasar-mixin-colorize'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    bgColor: String\n  },\n\n  render (h) {\n    return h('div', this.setBothColors(this.color, this.bgColor, {\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n```\n\n### Use Border Color Definition\n\n```js\nimport Vue from 'vue'\nimport { Colorize } from 'quasar-mixin-colorize'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    borderColor: String\n  },\n\n  render (h) {\n    return h('div', this.setBorderColor(this.color, this.borderColor, {\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n```\n\n### Use CSS Vars\n\n```js\n// Import all Quasar's colors as CSS vars so we can use e.g --q-color-red-5\nimport 'quasar-mixin-colorize/src/qColors.styl'\n\nimport { Colorize, calculateColor } from 'quasar-mixin-colorize'\n\nexport default Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize],\n\n  props: {\n    backgroundColor: {\n      type: String,\n      default: 'primary' // any color\n    }\n  },\n\n  computed: {\n    styles () {\n      let style = {}\n      style['--qribbon-text-color'] = calculateColor(this.color, 'white')\n      style['--qribbon-background-color'] = calculateColor(this.backgroundColor) // Notice default is against the prop in this instance\n      return style\n    }\n  },\n\n  ...\n\n  render (h) {\n    return h('div', {\n      style: this.styles\n    }, [\n      slot(this, 'default')\n    ])\n  }\n})\n```\n\n## Theme\n\nWhen using the Theme mix-in, two properties are added to your component: `theme` (Object) and `enableTheme` (Boolean). It also has two functions: `useDefaultTheme` and `getThemeColors` (see Theme API below for more details).\n\nA `theme` object contains a definition of a theme. There are many ways you can handle a theme. You can keep your pre-defined themes in an array of objects or in a JavaScript file that loads at run-time, or in individual theme files that are loaded on demand when the theme needs to be changed. This is entirely up to you, the developer. In the examples, we will be storing the themes in a javascript var so when you look at code, you can see them. It is recommended to store them in a file or files.\n\n### Theme Object\n\nA `theme` object, in it's simplist form, looks like this:\n\n```js\n  {\n    name: 'default'\n  }\n```\n\nThe rest of what a theme looks like is entirely up to the developer and how they would like to \"skin\" their application.\n\nFor instance, this is the one used by QCalendar in `theme.js`:\n\n```js\nexport default [\n  {\n    name: 'default'\n  },\n  {\n    name: 'dark',\n    // body\n    colorBody: 'grey-2',\n    backgroundBody: 'blue-grey-8',\n    colorBodyOutside: 'grey-6',\n    backgroundBodyOutside: 'blue-grey-8',\n    colorBodyPast: 'grey-11',\n    backgroundBodyPast: 'blue-grey-6',\n    colorBodyCurrent: 'blue-grey-2',\n    backgroundBodyCurrent: 'blue-grey-10',\n    colorBodyFuture: 'blue-grey-2',\n    backgroundBodyFuture: 'blue-grey-10',\n    // header - weekly only\n    colorHeader: 'blue-grey-2',\n    backgroundHeader: 'blue-grey-10',\n    colorHeaderOutside: 'blue-grey-2',\n    backgroundHeaderOutside: 'blue-grey-10',\n    // header - for daily only\n    colorHeaderPast: 'grey-11',\n    backgroundHeaderPast: 'blue-grey-6',\n    colorHeaderCurrent: 'blue-grey-2',\n    backgroundHeaderCurrent: 'blue-grey-10',\n    colorHeaderFuture: 'blue-grey-2',\n    backgroundHeaderFuture: 'blue-grey-10',\n    // work week - monthly only\n    colorWorkWeekPast: 'blue-grey-8',\n    backgroundWorkWeekPast: 'blue-grey-6',\n    colorWorkWeekCurrent: 'orange-4',\n    backgroundWorkWeekCurrent: 'blue-grey-10',\n    colorWorkWeekFuture: 'yellow-4',\n    backgroundWorkWeekFuture: 'blue-grey-10',\n    // label\n    colorDayLabelOutside: 'blue-grey-2',\n    backgroundDayLabelOutside: 'blue-grey-8',\n    colorDayLabelPast: 'grey-11',\n    backgroundDayLabelPast: 'blue-grey-6',\n    colorDayLabelCurrent: 'orange-4',\n    backgroundDayLabelCurrent: 'blue-grey-10',\n    colorDayLabelFuture: 'yellow-4',\n    backgroundDayLabelFuture: 'blue-grey-10',\n    // interval body\n    colorIntervalHeader: 'grey-2',\n    backgroundIntervalHeader: 'blue-grey-8',\n    colorIntervalBody: 'grey-2',\n    backgroundIntervalBody: 'blue-grey-8',\n    colorIntervalText: 'grey-2',\n    backgroundIntervalText: 'blue-grey-8',\n    // scheduler body\n    colorSchedulerHeader: 'grey-2',\n    backgroundSchedulerHeader: 'blue-grey-8',\n    colorSchedulerBody: 'grey-2',\n    backgroundSchedulerBody: 'blue-grey-8',\n    colorSchedulerText: 'grey-2',\n    backgroundSchedulerText: 'blue-grey-8'\n  },\n  {\n    name: 'teal',\n    // body\n    colorBody: 'grey-2',\n    backgroundBody: 'teal-8',\n    colorBodyOutside: 'grey-6',\n    backgroundBodyOutside: 'teal-8',\n    colorBodyPast: 'grey-11',\n    backgroundBodyPast: 'teal-6',\n    colorBodyCurrent: 'teal-2',\n    backgroundBodyCurrent: 'teal-10',\n    colorBodyFuture: 'teal-2',\n    backgroundBodyFuture: 'teal-10',\n    // header - weekly only\n    colorHeader: 'teal-2',\n    backgroundHeader: 'teal-10',\n    colorHeaderOutside: 'teal-2',\n    backgroundHeaderOutside: 'teal-10',\n    // header - for daily only\n    colorHeaderPast: 'grey-11',\n    backgroundHeaderPast: 'teal-6',\n    colorHeaderCurrent: 'teal-2',\n    backgroundHeaderCurrent: 'teal-10',\n    colorHeaderFuture: 'teal-2',\n    backgroundHeaderFuture: 'teal-10',\n    // work week - monthly only\n    colorWorkWeekPast: 'teal-8',\n    backgroundWorkWeekPast: 'teal-6',\n    colorWorkWeekCurrent: 'orange-4',\n    backgroundWorkWeekCurrent: 'teal-10',\n    colorWorkWeekFuture: 'yellow-4',\n    backgroundWorkWeekFuture: 'teal-10',\n    // label\n    colorDayLabelOutside: 'teal-2',\n    backgroundDayLabelOutside: 'teal-8',\n    colorDayLabelPast: 'grey-11',\n    backgroundDayLabelPast: 'teal-6',\n    colorDayLabelCurrent: 'orange-4',\n    backgroundDayLabelCurrent: 'teal-10',\n    colorDayLabelFuture: 'yellow-4',\n    backgroundDayLabelFuture: 'teal-10',\n    // interval body\n    colorIntervalHeader: 'grey-2',\n    backgroundIntervalHeader: 'teal-8',\n    colorIntervalBody: 'grey-2',\n    backgroundIntervalBody: 'teal-8',\n    colorIntervalText: 'grey-2',\n    backgroundIntervalText: 'teal-8',\n    // scheduler body\n    colorSchedulerHeader: 'grey-2',\n    backgroundSchedulerHeader: 'teal-8',\n    colorSchedulerBody: 'grey-2',\n    backgroundSchedulerBody: 'teal-8',\n    colorSchedulerText: 'grey-2',\n    backgroundSchedulerText: 'teal-8'\n  },\n  {\n    name: 'brown',\n    // body\n    colorBody: 'brown-2',\n    backgroundBody: 'brown-8',\n    colorBodyOutside: 'grey-6',\n    backgroundBodyOutside: 'brown-8',\n    colorBodyPast: 'grey-11',\n    backgroundBodyPast: 'brown-6',\n    colorBodyCurrent: 'brown-2',\n    backgroundBodyCurrent: 'brown-10',\n    colorBodyFuture: 'brown-2',\n    backgroundBodyFuture: 'brown-10',\n    // header - weekly only\n    colorHeader: 'brown-2',\n    backgroundHeader: 'brown-10',\n    colorHeaderOutside: 'brown-2',\n    backgroundHeaderOutside: 'brown-10',\n    // header - for daily only\n    colorHeaderPast: 'grey-11',\n    backgroundHeaderPast: 'brown-6',\n    colorHeaderCurrent: 'brown-2',\n    backgroundHeaderCurrent: 'brown-10',\n    colorHeaderFuture: 'brown-2',\n    backgroundHeaderFuture: 'brown-10',\n    // work week - monthly only\n    colorWorkWeekPast: 'brown-8',\n    backgroundWorkWeekPast: 'brown-6',\n    colorWorkWeekCurrent: 'orange-4',\n    backgroundWorkWeekCurrent: 'brown-10',\n    colorWorkWeekFuture: 'yellow-4',\n    backgroundWorkWeekFuture: 'brown-10',\n    // label\n    colorDayLabelOutside: 'brown-2',\n    backgroundDayLabelOutside: 'brown-8',\n    colorDayLabelPast: 'grey-11',\n    backgroundDayLabelPast: 'brown-6',\n    colorDayLabelCurrent: 'orange-4',\n    backgroundDayLabelCurrent: 'brown-10',\n    colorDayLabelFuture: 'yellow-4',\n    backgroundDayLabelFuture: 'brown-10',\n    // interval body\n    colorIntervalHeader: 'grey-2',\n    backgroundIntervalHeader: 'brown-8',\n    colorIntervalBody: 'grey-2',\n    backgroundIntervalBody: 'brown-8',\n    colorIntervalText: 'grey-2',\n    backgroundIntervalText: 'brown-8',\n    // scheduler body\n    colorSchedulerHeader: 'grey-2',\n    backgroundSchedulerHeader: 'brown-8',\n    colorSchedulerBody: 'grey-2',\n    backgroundSchedulerBody: 'brown-8',\n    colorSchedulerText: 'grey-2',\n    backgroundSchedulerText: 'brown-8'\n  },\n  {\n    name: 'deep purple',\n    // body\n    colorBody: 'grey-2',\n    backgroundBody: 'deep-purple-8',\n    colorBodyOutside: 'grey-6',\n    backgroundBodyOutside: 'deep-purple-8',\n    colorBodyPast: 'grey-11',\n    backgroundBodyPast: 'deep-purple-6',\n    colorBodyCurrent: 'deep-purple-2',\n    backgroundBodyCurrent: 'deep-purple-10',\n    colorBodyFuture: 'deep-purple-2',\n    backgroundBodyFuture: 'deep-purple-10',\n    // header - weekly only\n    colorHeader: 'deep-purple-2',\n    backgroundHeader: 'deep-purple-10',\n    colorHeaderOutside: 'deep-purple-2',\n    backgroundHeaderOutside: 'deep-purple-10',\n    // header - for daily only\n    colorHeaderPast: 'grey-11',\n    backgroundHeaderPast: 'deep-purple-6',\n    colorHeaderCurrent: 'deep-purple-2',\n    backgroundHeaderCurrent: 'deep-purple-10',\n    colorHeaderFuture: 'deep-purple-2',\n    backgroundHeaderFuture: 'deep-purple-10',\n    // work week - monthly only\n    colorWorkWeekPast: 'deep-purple-8',\n    backgroundWorkWeekPast: 'deep-purple-6',\n    colorWorkWeekCurrent: 'orange-4',\n    backgroundWorkWeekCurrent: 'deep-purple-10',\n    colorWorkWeekFuture: 'yellow-4',\n    backgroundWorkWeekFuture: 'deep-purple-10',\n    // label\n    colorDayLabelOutside: 'deep-purple-2',\n    backgroundDayLabelOutside: 'deep-purple-8',\n    colorDayLabelPast: 'grey-11',\n    backgroundDayLabelPast: 'deep-purple-6',\n    colorDayLabelCurrent: 'orange-4',\n    backgroundDayLabelCurrent: 'deep-purple-10',\n    colorDayLabelFuture: 'yellow-4',\n    backgroundDayLabelFuture: 'deep-purple-10',\n    // interval body\n    colorIntervalHeader: 'grey-2',\n    backgroundIntervalHeader: 'deep-purple-8',\n    colorIntervalBody: 'grey-2',\n    backgroundIntervalBody: 'deep-purple-8',\n    colorIntervalText: 'grey-2',\n    backgroundIntervalText: 'deep-purple-8',\n    // scheduler body\n    colorSchedulerHeader: 'grey-2',\n    backgroundSchedulerHeader: 'deep-purple-8',\n    colorSchedulerBody: 'grey-2',\n    backgroundSchedulerBody: 'deep-purple-8',\n    colorSchedulerText: 'grey-2',\n    backgroundSchedulerText: 'deep-purple-8'\n  },\n  {\n    name: 'indigo',\n    // body\n    colorBody: 'grey-2',\n    backgroundBody: 'indigo-8',\n    colorBodyOutside: 'grey-6',\n    backgroundBodyOutside: 'indigo-8',\n    colorBodyPast: 'grey-11',\n    backgroundBodyPast: 'indigo-6',\n    colorBodyCurrent: 'indigo-2',\n    backgroundBodyCurrent: 'indigo-10',\n    colorBodyFuture: 'indigo-2',\n    backgroundBodyFuture: 'indigo-10',\n    // header - weekly only\n    colorHeader: 'indigo-2',\n    backgroundHeader: 'indigo-10',\n    colorHeaderOutside: 'indigo-2',\n    backgroundHeaderOutside: 'indigo-10',\n    // header - for daily only\n    colorHeaderPast: 'grey-11',\n    backgroundHeaderPast: 'indigo-6',\n    colorHeaderCurrent: 'indigo-2',\n    backgroundHeaderCurrent: 'indigo-10',\n    colorHeaderFuture: 'indigo-2',\n    backgroundHeaderFuture: 'indigo-10',\n    // work week - monthly only\n    colorWorkWeekPast: 'indigo-8',\n    backgroundWorkWeekPast: 'indigo-6',\n    colorWorkWeekCurrent: 'orange-4',\n    backgroundWorkWeekCurrent: 'indigo-10',\n    colorWorkWeekFuture: 'yellow-4',\n    backgroundWorkWeekFuture: 'indigo-10',\n    // label\n    colorDayLabelOutside: 'indigo-2',\n    backgroundDayLabelOutside: 'indigo-8',\n    colorDayLabelPast: 'grey-11',\n    backgroundDayLabelPast: 'indigo-6',\n    colorDayLabelCurrent: 'orange-4',\n    backgroundDayLabelCurrent: 'indigo-10',\n    colorDayLabelFuture: 'yellow-4',\n    backgroundDayLabelFuture: 'indigo-10',\n    // interval body\n    colorIntervalHeader: 'grey-2',\n    backgroundIntervalHeader: 'indigo-8',\n    colorIntervalBody: 'grey-2',\n    backgroundIntervalBody: 'indigo-8',\n    colorIntervalText: 'grey-2',\n    backgroundIntervalText: 'indigo-8',\n    // scheduler body\n    colorSchedulerHeader: 'grey-2',\n    backgroundSchedulerHeader: 'indigo-8',\n    colorSchedulerBody: 'grey-2',\n    backgroundSchedulerBody: 'indigo-8',\n    colorSchedulerText: 'grey-2',\n    backgroundSchedulerText: 'indigo-8'\n  },\n  {\n    name: 'blue',\n    // body\n    colorBody: 'grey-2',\n    backgroundBody: 'blue-8',\n    colorBodyOutside: 'grey-6',\n    backgroundBodyOutside: 'blue-8',\n    colorBodyPast: 'grey-11',\n    backgroundBodyPast: 'blue-6',\n    colorBodyCurrent: 'blue-2',\n    backgroundBodyCurrent: 'blue-10',\n    colorBodyFuture: 'blue-2',\n    backgroundBodyFuture: 'blue-10',\n    // header - weekly only\n    colorHeader: 'blue-2',\n    backgroundHeader: 'blue-10',\n    colorHeaderOutside: 'blue-2',\n    backgroundHeaderOutside: 'blue-10',\n    // header - for daily only\n    colorHeaderPast: 'grey-11',\n    backgroundHeaderPast: 'blue-6',\n    colorHeaderCurrent: 'blue-2',\n    backgroundHeaderCurrent: 'blue-10',\n    colorHeaderFuture: 'blue-2',\n    backgroundHeaderFuture: 'blue-10',\n    // work week - monthly only\n    colorWorkWeekPast: 'blue-8',\n    backgroundWorkWeekPast: 'blue-6',\n    colorWorkWeekCurrent: 'orange-4',\n    backgroundWorkWeekCurrent: 'blue-10',\n    colorWorkWeekFuture: 'yellow-4',\n    backgroundWorkWeekFuture: 'blue-10',\n    // label\n    colorDayLabelOutside: 'blue-2',\n    backgroundDayLabelOutside: 'blue-8',\n    colorDayLabelPast: 'grey-11',\n    backgroundDayLabelPast: 'blue-6',\n    colorDayLabelCurrent: 'orange-4',\n    backgroundDayLabelCurrent: 'blue-10',\n    colorDayLabelFuture: 'yellow-4',\n    backgroundDayLabelFuture: 'blue-10',\n    // interval body\n    colorIntervalHeader: 'grey-2',\n    backgroundIntervalHeader: 'blue-8',\n    colorIntervalBody: 'grey-2',\n    backgroundIntervalBody: 'blue-8',\n    colorIntervalText: 'grey-2',\n    backgroundIntervalText: 'blue-8',\n    // scheduler body\n    colorSchedulerHeader: 'grey-2',\n    backgroundSchedulerHeader: 'blue-8',\n    colorSchedulerBody: 'grey-2',\n    backgroundSchedulerBody: 'blue-8',\n    colorSchedulerText: 'grey-2',\n    backgroundSchedulerText: 'blue-8'\n  }\n]\n```\n\n### Theme Example\n\nThe usage, in QCalendar, goes like this (as an example):\n\nAt the top of your component do the imports.\n\n```js\nimport Vue from 'vue'\nimport { Colorize, Theme } from 'quasar-mixin-colorize'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize, Theme],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    bgColor: String\n  },\n\n  render (h) {\n    return this.__renderWorkWeekHead(h)\n  }\n```\n\nthen, when rendering:\n\n```js\n  __renderWorkWeekHead (h) {\n    let colors = new Map(), color, backgroundColor\n    // this function returns passed in \"data\", as-is\n    let updateColors = this.useDefaultTheme\n    if (this.enableTheme === true) {\n      color = 'colorHeader'\n      backgroundColor = 'backgroundHeader'\n      // get specified theme colors\n      colors = this.getThemeColors([color, backgroundColor])\n      // Colorize function to use, modifies \"style\"\n      updateColors = this.setBothColors\n    }\n\n    return h('div', updateColors(colors.get(color), colors.get(backgroundColor), {\n      staticClass: 'q-calendar-weekly__head-workweek'\n    }), '#')\n  }\n```\nYou can see the QCalendar theming in action [here](https://quasarframework.github.io/app-extension-qcalendar/demo). Scroll down the bottom left, turn on themes and then select one.\n\n# Colorize API\n\n## Colorize Properties\n| Vue&nbsp;Property | Type\t| Description |\n|---|---|---|\n| color | String | Any css color or from the Quasar Color Palette |\n\n## Colorize Methods\n| Vue&nbsp;method | Args\t| Description |\n|---|---|---|---|\n| setTextColor | color, {} | Object | The color and object containing `style` |\n| setBackgroundColor | background-color, {} | Object | The background-color and object containing `style` |\n| setBorderColor | border-color, {} | Object | The border-color and object containing `style` |\n| setBothColors | color, bgColor, {} | Object | The color, background-color and object containing `style` |\n\n## Exported Colorize Functions\n| Vue&nbsp;method | Args\t| Returns | Description |\n|---|---|---|---|\n| isNamedCssColor | color | Boolean | Returns true if passed in color is a css named color |\n| isCssColor | color | Boolean | Returns true if passed in color is a named color, hex color or rgb/rgba/hsl/hsla color |\n| isCssVar | color | Boolean | Returns true if passed in color is a CSS variable starting with '--' |\n| calculateColor | color, defaultColor = 'black' | String | Check if a color is a standard CSS color or a quasar color |\n| makeQuasarColorVar | color, defaultColor | String | Generate a CSS variable definition based on the quasar color or existing variable passed in i.e `var(--q-color-red-5, 'default')` |\n\n# Theme API\n\n## Theme Properties\n| Vue&nbsp;Property | Type\t| Description |\n|---|---|---|\n| theme-enabled | Boolean | Turn theming on or off |\n| theme | Object | A theme object |\n\n## Theme Methods\n| Vue&nbsp;method | Args\t| Returns | Description |\n|---|---|---|---|\n| useDefaultTheme | color, bgColor, data = {} | The passed in `data` object | |\n| getThemeColors | keys = [] | Map | Returns a Map of theme items based on keys |\n\n# Donate\nIf you appreciate the work that went into this mix-in, please consider [donating to Quasar](https://donate.quasar.dev).\n\n---\nThis page created with [QMarkdown](https://quasarframework.github.io/app-extension-qmarkdown), another great Quasar App Extension.\n",d={name:"PageIndex",components:{Hero:l["a"]},data:function(){return{markdown:t}},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{onToc:function(e){this.toc=e}}},u=d,c=o("2877"),s=Object(c["a"])(u,r,a,!1,null,null,null);n["default"]=s.exports}}]);