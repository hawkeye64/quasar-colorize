(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["ed00d282"],{"60c4":function(e,r,o){"use strict";o.r(r);var t=function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("div",{staticClass:"q-pa-md"},[o("div",{staticClass:"q-pb-md q-gutter-md row justify-around"},[o("q-input",{attrs:{filled:""},scopedSlots:e._u([{key:"append",fn:function(){return[o("q-icon",{staticClass:"cursor-pointer",attrs:{name:"colorize"}},[o("q-popup-proxy",{attrs:{"transition-show":"scale","transition-hide":"scale"}},[o("q-color",{model:{value:e.bgColor,callback:function(r){e.bgColor=r},expression:"bgColor"}})],1)],1)]},proxy:!0}]),model:{value:e.bgColor,callback:function(r){e.bgColor=r},expression:"bgColor"}})],1),o("q-separator"),o("div",{staticClass:"q-pa-md row justify-around"},[o("my-component",{attrs:{"bg-color":e.bgColor}},[o("div",{staticClass:"text-h4"},[e._v("Some Text")])])],1)],1)},l=[],a=o("2b0e"),n=o("dda6"),i=a["a"].extend({name:"my-component",mixins:[n["a"]],props:{bgColor:String},render:function(e){return e("div",this.setBackgroundColor(this.bgColor,{style:{width:"200px",height:"200px"}}))}}),s={components:{MyComponent:i},data:function(){return{bgColor:"#FF0000"}}},d=s,u=o("2877"),c=Object(u["a"])(d,t,l,!1,null,null,null);r["default"]=c.exports},dda6:function(e,r,o){"use strict";o.d(r,"a",function(){return u}),o.d(r,"b",function(){return c});var t=o("2b0e");const l=["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"];function a(e){return!!e&&l.includes(e.toLowerCase())}function n(e){return!!e&&(!!e.match(/^(#|(rgb|hsl)a?\()/)||a(e))}function i(e){return!!e&&e.startsWith("--")}function s(e,r="black"){return void 0===e&&void 0!==r?s(r):n(e)?e:d(e,r)}function d(e,r){const o=i(e)?e:`--q-color-${e}`;return`var(${o}, '${r}')`}const u=t["a"].extend({name:"colorize",props:{color:String},methods:{__isValidCssColor(e){return n(e)||i(e)},setBothColors(e,r,o={}){return this.setTextColor(e,this.setBackgroundColor(r,o))},setBackgroundColor(e,r={}){if(this.__isValidCssColor(e)){const o=s(e);r.style={...r.style,"background-color":`${o}`,"border-color":`${o}`}}else if(e){const o=e.toString().trim();r.class={...r.class,["bg-"+o]:!0}}return r},setTextColor(e,r={}){if(this.__isValidCssColor(e)){const o=s(e);r.style={...r.style,color:`${o}`,"caret-color":`${o}`}}else if(e){const o=e.toString().trim();r.class={...r.class,["text-"+o]:!0}}return r}}}),c=t["a"].extend({name:"theme",props:{theme:{type:Object,default:()=>{}},enableTheme:Boolean},methods:{useDefaultTheme(e,r,o={}){return o},getThemeColors(e=[]){const r=new Map;return!0===this.enableTheme&&void 0!==this.theme&&e.forEach(e=>{r.set(e,this.theme[e])}),r}}})}}]);