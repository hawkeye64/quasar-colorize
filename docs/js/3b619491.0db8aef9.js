(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["3b619491"],{"0053":function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n  <div class="q-pa-md">\n    <div class="q-pb-md q-gutter-md row justify-around">\n      <q-input\n        filled\n        v-model="color"\n      >\n        <template v-slot:append>\n          <q-icon name="colorize" class="cursor-pointer">\n            <q-popup-proxy transition-show="scale" transition-hide="scale">\n              <q-color v-model="color" />\n            </q-popup-proxy>\n          </q-icon>\n        </template>\n      </q-input>\n    </div>\n    <q-separator />\n    <div class="q-pa-md row justify-around">\n      <my-component\n        :color="color"\n      >\n        <div class="text-h4">Some Text</div>\n      </my-component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \'vue\'\nimport Colorize from \'quasar-mixin-colorize\'\n\nconst MyComponent = Vue.extend({\n  name: \'my-component\',\n\n  mixins: [Colorize],\n\n  render (h) {\n    return h(\'div\', this.setTextColor(this.color, {\n      style: {\n        width: \'200px\',\n        height: \'200px\'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      color: \'#FF0000\'\n    }\n  },\n\n  methods: {\n    selectColor () {\n    }\n  }\n}\n<\/script>\n'},"0960":function(n,t,e){"use strict";e.r(t);var o=function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("hero",[o("div",{staticClass:"q-markdown"},[o("example-title",{attrs:{title:"Basic"}}),o("example-card",{attrs:{title:"Text",name:"BasicRenderingColor","tag-parts":n.getTagParts(e("4cbe").default)}}),o("example-card",{attrs:{title:"Background",name:"BasicRenderingBackground","tag-parts":n.getTagParts(e("5e15").default)}}),o("example-card",{attrs:{title:"Text and Background",name:"BasicRenderingBoth","tag-parts":n.getTagParts(e("19e1").default)}}),o("q-markdown",[n._v("\nFor all examples below that take an input, you can manually enter any valid color as well. Here are some ideas you can try:\n\n| Color | Type |\n| --- | --- |\n| purple-7 | Quasar color palette |\n| --q-color-green-5 | Quasar css var color |\n| rgb(255, 128, 27) | rgb color |\n| hsl(120, 100%, 50%) | hsl color |\n| coral | CSS named color |\n\n      ")]),o("example-card",{attrs:{title:"Text with Input",name:"BasicRenderingColorSelection","tag-parts":n.getTagParts(e("0053").default)}}),o("example-card",{attrs:{title:"Background with Input",name:"BasicRenderingBackgroundSelection","tag-parts":n.getTagParts(e("f1f2").default)}}),o("example-card",{attrs:{title:"Text and Background with Input",name:"BasicRenderingBothSelection","tag-parts":n.getTagParts(e("dde52").default)}})],1)])},a=[],r=e("2514"),i=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("h1",{staticClass:"q-markdown--heading-h1 q-markdown--title-heavy example-title",attrs:{id:n.slugifiedTitle},on:{click:function(t){return n.copyHeading(n.slugifiedTitle)}}},[n._v(n._s(n.title))])},s=[];e("a481");function l(n){var t=window.location.origin+window.location.pathname+"#"+n,e=document.createElement("textarea");e.className="fixed-top",e.value=t,document.body.appendChild(e),e.focus(),e.select(),document.execCommand("copy"),document.body.removeChild(e),this.$q.notify({message:"Anchor has been copied to clipboard.",color:"white",textColor:"primary",icon:"done",position:"top",timeout:2e3})}function c(n){return encodeURIComponent(String(n).trim().replace(/\s+/g,"-"))}var d={name:"ExampleTitle",props:{title:{type:String,required:!0}},computed:{slugifiedTitle:function(){return c(this.title)}},methods:{copyHeading:l}},p=d,m=e("2877"),u=Object(m["a"])(p,i,s,!1,null,null,null),h=u.exports,g=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("section",{staticClass:"q-pa-md overflow-auto",attrs:{id:n.slugifiedTitle}},[e("q-card",{staticClass:"no-shadow",attrs:{flat:"",bordered:""}},[e("q-toolbar",[e("q-ribbon",{attrs:{position:"left",color:"rgba(0,0,0,.58)","background-color":"#c0c0c0","leaf-color":"#a0a0a0","leaf-position":"bottom",decoration:"rounded-out"}},[e("q-toolbar-title",{staticClass:"example-title",staticStyle:{padding:"5px 20px"},on:{click:function(t){return n.copyHeading(n.slugifiedTitle)}}},[e("span",{staticClass:"ellipsis"},[n._v(n._s(n.title))])])],1)],1),e("q-separator"),e("q-expansion-item",{attrs:{group:"someGroup",caption:"Code"}},[e("q-card",[e("q-tabs",{staticClass:"text-grey",attrs:{dense:"","active-color":"primary","indicator-color":"primary",align:"left","narrow-indicator":""},model:{value:n.tab,callback:function(t){n.tab=t},expression:"tab"}},[n.parts.template?e("q-tab",{attrs:{name:"template",label:"Template"}}):n._e(),n.parts.script?e("q-tab",{attrs:{name:"script",label:"Script"}}):n._e(),n.parts.style?e("q-tab",{attrs:{name:"style",label:"Style"}}):n._e()],1),e("q-separator"),e("q-tab-panels",{attrs:{animated:""},model:{value:n.tab,callback:function(t){n.tab=t},expression:"tab"}},[n.parts.template?e("q-tab-panel",{attrs:{name:"template"}},[e("q-markdown",{attrs:{src:n.parts.template}})],1):n._e(),n.parts.script?e("q-tab-panel",{attrs:{name:"script"}},[e("q-markdown",{attrs:{src:n.parts.script}})],1):n._e(),n.parts.style?e("q-tab-panel",{attrs:{name:"style"}},[e("q-markdown",{attrs:{src:n.parts.style}})],1):n._e()],1)],1)],1),e("q-separator"),e(n.name,{tag:"component",staticStyle:{overflow:"hidden"}})],1)],1)},f=[],b={name:"ExampleCard",components:{BasicRenderingColor:function(){return e.e("ed0471de").then(e.bind(null,"2241"))},BasicRenderingBackground:function(){return e.e("ed02a69e").then(e.bind(null,"4199"))},BasicRenderingBoth:function(){return e.e("ecfe01c8").then(e.bind(null,"93c1"))},BasicRenderingColorSelection:function(){return e.e("ecd8d194").then(e.bind(null,"b0d8"))},BasicRenderingBackgroundSelection:function(){return e.e("ecd6e540").then(e.bind(null,"d583"))},BasicRenderingBothSelection:function(){return e.e("ed055df4").then(e.bind(null,"10d7"))}},props:{title:{type:String,required:!0},name:{type:String,required:!0},tagParts:{type:Object,default:function(){}}},data:function(){return{tab:"template",parts:{}}},mounted:function(){this.updateParts()},computed:{slugifiedTitle:function(){return c(this.title)}},methods:{copyHeading:l,updateParts:function(){for(var n in this.parts={},this.tagParts)""!==this.tagParts[n]&&(this.parts[n]="```\n"+this.tagParts[n]+"\n```")}}},x=b,y=Object(m["a"])(x,g,f,!1,null,null,null),v=y.exports,q=function(n){var t,e={},o=C(n);o&&o.length>0&&(e.template=o);var a=document.createElement("html");return a.innerHTML=n,t=a.getElementsByTagName("script"),t.length>0&&(e.script=t[0].outerHTML),t=a.getElementsByTagName("style"),t.length>0&&(e.style=t[0].outerHTML),e},C=function(n){var t="";if(n&&n.length>0){var e="<template",o="</template>",a=n.indexOf(e),r=n.lastIndexOf(o);a>-1&&r>-1&&(t=n.substring(a,r+o.length))}return t},w={name:"Examples",components:{Hero:r["a"],ExampleTitle:h,ExampleCard:v},data:function(){return{tempToc:[]}},mounted:function(){this.toc=[],this.tempToc=[],this.addToToc("Basic"),this.addToToc("Text",2),this.addToToc("Background",2),this.addToToc("Text and Background",2),this.addToToc("Text with Input",2),this.addToToc("Background with Input",2),this.addToToc("Text and Background with Input",2),this.toc=this.tempToc},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(n){this.$store.commit("common/toc",n)}}},methods:{getTagParts:q,addToToc:function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=c(n);this.tempToc.push({children:[],id:e,label:n,level:t})}}},T=w,k=(e("e872"),Object(m["a"])(T,o,a,!1,null,null,null));t["default"]=k.exports},"19e1":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div class=\"q-pa-md row justify-around\">\n    <my-component\n      :color=\"color\"\n      :bg-color=\"bgColor\"\n      class=\"text-center\"\n    >\n      <div class=\"text-h4\">Some Text</div>\n    </my-component>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Colorize from 'quasar-mixin-colorize'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    bgColor: String\n  },\n\n  data () {\n    return {\n    }\n  },\n\n  render (h) {\n    return h('div', this.setBothColors(this.color, this.bgColor, {\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      color: '#FFFF00',\n      bgColor: '#FF0000'\n    }\n  }\n}\n<\/script>\n"},2514:function(n,t,e){"use strict";var o=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("section",{staticClass:"page-header"},[e("h1",{staticClass:"project-name"},[n._v("Colorize")]),e("h2",{staticClass:"project-tagline"}),e("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://github.com/hawkeye64/quasar-mixin-colorize",target:"_blank",label:"View on GitHub","no-caps":"",flat:""}}),e("q-btn",{staticClass:"btn",attrs:{to:"/docs",label:"Docs","no-caps":"",flat:""}}),e("q-btn",{staticClass:"btn",attrs:{to:"/examples",label:"Examples","no-caps":"",flat:""}}),e("q-btn",{staticClass:"btn",attrs:{to:"/demo",label:"Interactive Demo","no-caps":"",flat:""}}),e("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://donate.quasar.dev",target:"_blank",label:"Donate","no-caps":"",flat:""}})],1),e("main",{staticClass:"flex flex-start justify-center inset-shadow"},[e("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg inset-shadow",staticStyle:{width:"100%",height:"3px"}}),e("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg bg-white shadow-1",staticStyle:{"max-width":"800px",width:"100%"}},[n._t("default")],2)])])},a=[],r={name:"Hero"},i=r,s=e("2877"),l=Object(s["a"])(i,o,a,!1,null,null,null);t["a"]=l.exports},"4cbe":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div class=\"q-pa-md row justify-around\">\n    <my-component\n      :color=\"color\"\n    >\n      <div class=\"text-h4\">Some Text</div>\n    </my-component>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Colorize from 'quasar-mixin-colorize'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize],\n\n  render (h) {\n    return h('div', this.setTextColor(this.color, {\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      color: '#FF0000'\n    }\n  }\n}\n<\/script>\n"},"5e15":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div class=\"q-pa-md row justify-around\">\n    <my-component\n      :bg-color=\"bgColor\"\n    />\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Colorize from 'quasar-mixin-colorize'\n\nconst MyComponent = Vue.extend({\n  name: 'my-component',\n\n  mixins: [Colorize],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    bgColor: String\n  },\n\n  data () {\n    return {\n    }\n  },\n\n  render (h) {\n    return h('div', this.setBackgroundColor(this.bgColor, {\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }))\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      bgColor: '#FF0000'\n    }\n  }\n}\n<\/script>\n"},b656:function(n,t,e){},dde52:function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n<div class="q-pa-md">\n    <div class="q-pb-md q-gutter-md row justify-around">\n      <q-input\n        filled\n        v-model="color"\n      >\n        <template v-slot:append>\n          <q-icon name="colorize" class="cursor-pointer">\n            <q-popup-proxy transition-show="scale" transition-hide="scale">\n              <q-color v-model="color" />\n            </q-popup-proxy>\n          </q-icon>\n        </template>\n      </q-input>\n\n      <q-input\n        filled\n        v-model="bgColor"\n      >\n        <template v-slot:append>\n          <q-icon name="colorize" class="cursor-pointer">\n            <q-popup-proxy transition-show="scale" transition-hide="scale">\n              <q-color v-model="bgColor" />\n            </q-popup-proxy>\n          </q-icon>\n        </template>\n      </q-input>\n    </div>\n    <q-separator />\n    <div class="q-pa-md row justify-around">\n      <my-component\n        :color="color"\n        :bg-color="bgColor"\n        class="text-center"\n      >\n        <div class="text-h4">Some Text</div>\n      </my-component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \'vue\'\nimport Colorize from \'quasar-mixin-colorize\'\n\nconst MyComponent = Vue.extend({\n  name: \'my-component\',\n\n  mixins: [Colorize],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    bgColor: String\n  },\n\n  data () {\n    return {\n    }\n  },\n\n  render (h) {\n    return h(\'div\', this.setBothColors(this.color, this.bgColor, {\n      style: {\n        width: \'200px\',\n        height: \'200px\'\n      }\n    }), [\n      this.$slots.default\n    ])\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      color: \'#FFFF00\',\n      bgColor: \'#FF0000\'\n    }\n  }\n}\n<\/script>\n'},e872:function(n,t,e){"use strict";var o=e("b656"),a=e.n(o);a.a},f1f2:function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n  <div class="q-pa-md">\n    <div class="q-pb-md q-gutter-md row justify-around">\n      <q-input\n        filled\n        v-model="bgColor"\n      >\n        <template v-slot:append>\n          <q-icon name="colorize" class="cursor-pointer">\n            <q-popup-proxy transition-show="scale" transition-hide="scale">\n              <q-color v-model="bgColor" />\n            </q-popup-proxy>\n          </q-icon>\n        </template>\n      </q-input>\n    </div>\n    <q-separator />\n    <div class="q-pa-md row justify-around">\n      <my-component\n        :bg-color="bgColor"\n      >\n        <div class="text-h4">Some Text</div>\n      </my-component>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \'vue\'\nimport Colorize from \'quasar-mixin-colorize\'\n\nconst MyComponent = Vue.extend({\n  name: \'my-component\',\n\n  mixins: [Colorize],\n\n  props: {\n    // color prop is added by colorize mix-in\n    // background-color is optional and needs to be added if needed\n    bgColor: String\n  },\n\n  data () {\n    return {\n    }\n  },\n\n  render (h) {\n    return h(\'div\', this.setBackgroundColor(this.bgColor, {\n      style: {\n        width: \'200px\',\n        height: \'200px\'\n      }\n    }))\n  }\n})\n\nexport default {\n  components: {\n    MyComponent\n  },\n\n  data () {\n    return {\n      bgColor: \'#FF0000\'\n    }\n  }\n}\n<\/script>\n'}}]);